services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: persistent-context-qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # gRPC
    volumes:
      - ./data/qdrant:/qdrant/storage
    environment:
      - QDRANT__LOG_LEVEL=INFO
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__STORAGE__ON_DISK_PAYLOAD=true
      - QDRANT__SERVICE__ENABLE_TLS=false
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c ':> /dev/tcp/127.0.0.1/6333' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  ollama:
    image: ollama/ollama:latest
    container_name: persistent-context-ollama
    ports:
      - "11434:11434"
    volumes:
      - ./data/ollama:/root/.ollama
    environment:
      - OLLAMA_MODELS=/root/.ollama
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # Pull phi3:mini model only if not already downloaded
    entrypoint: >
      /bin/bash -c "ollama serve &
                    sleep 5 &&
                    (ollama list | grep phi3:mini || ollama pull phi3:mini) &&
                    wait"
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s

  persistent-context-svc:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: persistent-context-svc
    ports:
      - "8543:8543"
    depends_on:
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_healthy
    volumes:
      - ./data/personas:/data/personas
    restart: unless-stopped


networks:
  default:
    name: persistent-context-network