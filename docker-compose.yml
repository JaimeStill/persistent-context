services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: persistent-context-qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # gRPC
    volumes:
      - ./data/qdrant:/qdrant/storage
    environment:
      - QDRANT__LOG_LEVEL=INFO
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__STORAGE__ON_DISK_PAYLOAD=true
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    container_name: persistent-context-ollama
    ports:
      - "11434:11434"
    volumes:
      - ./data/ollama:/root/.ollama
    environment:
      - OLLAMA_MODELS=/root/.ollama
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # Pull phi3:mini model only if not already downloaded
    entrypoint: >
      /bin/bash -c "ollama serve &
                    sleep 5 &&
                    (ollama list | grep phi3:mini || ollama pull phi3:mini) &&
                    wait"

  persistent-context:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: persistent-context-server
    ports:
      - "8080:8080"
    depends_on:
      - qdrant
      - ollama
    environment:
      - APP_SERVER_PORT=8080
      - APP_QDRANT_URL=http://qdrant:6333
      - APP_OLLAMA_URL=http://ollama:11434
      - APP_STORAGE_PERSONA_PATH=/data/personas
      - APP_LOGGING_LEVEL=info
      - APP_LOGGING_FORMAT=json
    volumes:
      - ./data/personas:/data/personas
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  default:
    name: persistent-context-network